TS
qchisq(1-0.05,5)
library(faraway)
Data<-faraway::wcgs
Data<-Data[, -c(2:3)]
Data<-Data[, -c(4:5)]
Data<-Data[, -c(7:9)]
Data$dibep<-factor(Data$dibep)
Data$chd<-factor(Data$chd)
set.seed(6021) ##for reproducibility to get the same split
sample<-sample.int(nrow(Data), floor(.50*nrow(Data)), replace = F)
train<-Data[sample, ] ##training data frame
test<-Data[-sample, ] ##test data frame
ggplot2::ggplot(train, aes(x=dibep, fill=chd))+
geom_bar(position = "fill")+
labs(x="Behavior Type", y="Proportion", title="Proportion of People with Coronary Heart Dieases by Behavior Type")
library(gridExtra)
dp1<-ggplot2::ggplot(train,aes(x=age, color=chd))+
geom_density()+
labs(title="Density Plot of Age by People with Coronary Heart Dieases")
dp2<-ggplot2::ggplot(train,aes(x=sdp, color=chd))+
geom_density()+
labs(title="Density Plot of Systolic Blood Pressue by People with Coronary Heart Dieases")
dp3<-ggplot2::ggplot(train,aes(x=dbp, color=chd))+
geom_density()+
labs(title="Density Plot of Diastolic Blood Pressure by People with Coronary Heart Dieases")
dp4<-ggplot2::ggplot(train,aes(x=cigs, color=chd))+
geom_density()+
labs(title="Density Plot of Cigarttes Smoked by People with Coronary Heart Dieases")
gridExtra::grid.arrange(dp1, dp2, dp3, dp4, ncol = 2, nrow = 2)
##fit logistic regression
result<-glm(chd~., family=binomial, data=train)
result
newdata<-data.frame(age=45, sdp=110, dbp=70, cigs=0, dibep="B")
logodds <- exp(predict(result,newdata))
logodds
preds<-predict(result,newdata, type="response")
preds
TS<-result$"null.deviance" - result$"deviance"
##pvalue
1-pchisq(TS,5)
summary(result)
TS<-result$"null.deviance" - result$"deviance"
##pvalue
TS
1-pchisq(TS,5)
qchisq(1-0.05,5)
TS<-result$"null.deviance" - result$"deviance"
library(palmerpenguins)
Data<-palmerpenguins::penguins
##remove penguins with gender missing
Data<-Data[complete.cases(Data[ , 7]),-c(2,8)]
##80-20 split
Data$sex<-factor(Data$sex)
Data$species<-factor(Data$species)
set.seed(1)
sample<-sample.int(nrow(Data), floor(.80*nrow(Data)), replace = F)
train<-Data[sample, ]
test<-Data[-sample, ]
dp1<-ggplot2::ggplot(train,aes(x=bill_length_mm, color=sex))+
geom_density()+
labs(title="Density Plot of Bill Length by Penguin Sex")
dp2<-ggplot2::ggplot(train,aes(x=bill_depth_mm, color=sex))+
geom_density()+
labs(title="Density Plot of Bill Depth by Penguin Sex")
dp3<-ggplot2::ggplot(train,aes(x=flipper_length_mm, color=sex))+
geom_density()+
labs(title="Density Plot of Flipper Length by Penguin Sex")
dp4<-ggplot2::ggplot(train,aes(x=body_mass_g, color=sex))+
geom_density()+
labs(title="Density Plot of Body Mass by Penguin Sex")
gridExtra::grid.arrange(dp1, dp2, dp3, dp4, ncol = 2, nrow = 2)
##fit logistic regression
result<-glm(sex~., family=binomial, data=train)
summary(result)
result<-glm(sex~bill_length_mm+bill_depth_mm+body_mass_g+species, family=binomial, data=train)
result
newdata<-data.frame(bill_length_mm=49, bill_depth_mm=15, flipper_length=220, body_mass_g=5700, species="Gentoo")
logodds <- predict(result,newdata)
logodds
odds <- exp(logodds)
odds
preds<-predict(result,newdata, type="response")
preds
TS<-result$"null.deviance" - result$"deviance"
##pvalue
TS
1-pchisq(TS,5)
qchisq(1-0.05,5)
library(palmerpenguins)
Data<-palmerpenguins::penguins
##remove penguins with gender missing
Data<-Data[complete.cases(Data[ , 7]),-c(2,8)]
##80-20 split
Data$sex<-factor(Data$sex)
Data$species<-factor(Data$species)
set.seed(1)
sample<-sample.int(nrow(Data), floor(.80*nrow(Data)), replace = F)
train<-Data[sample, ]
test<-Data[-sample, ]
dp1<-ggplot2::ggplot(train,aes(x=bill_length_mm, color=sex))+
geom_density()+
labs(title="Density Plot of Bill Length by Penguin Sex")
dp2<-ggplot2::ggplot(train,aes(x=bill_depth_mm, color=sex))+
geom_density()+
labs(title="Density Plot of Bill Depth by Penguin Sex")
dp3<-ggplot2::ggplot(train,aes(x=flipper_length_mm, color=sex))+
geom_density()+
labs(title="Density Plot of Flipper Length by Penguin Sex")
dp4<-ggplot2::ggplot(train,aes(x=body_mass_g, color=sex))+
geom_density()+
labs(title="Density Plot of Body Mass by Penguin Sex")
gridExtra::grid.arrange(dp1, dp2, dp3, dp4, ncol = 2, nrow = 2)
##fit logistic regression
result<-glm(sex~., family=binomial, data=train)
summary(result)
result<-glm(sex~bill_length_mm+bill_depth_mm+body_mass_g+species, family=binomial, data=train)
result
newdata<-data.frame(bill_length_mm=49, bill_depth_mm=15, flipper_length=220, body_mass_g=5700, species="Gentoo")
logodds <- predict(result,newdata)
logodds
odds <- exp(logodds)
odds
preds<-predict(result,newdata, type="response")
preds
TS<-result$"null.deviance" - result$"deviance"
##pvalue
TS
1-pchisq(TS,5)
qchisq(1-0.05,5)
preds<-predict(result,newdata=test, type="response")
library(ROCR)
##produce the numbers associated with classification table
rates<-ROCR::prediction(preds, test$chd)
preds<-predict(result,newdata=test, type="response")
library(ROCR)
##produce the numbers associated with classification table
rates<-ROCR::prediction(preds, test$sex)
##store the true positive and false postive rates
roc_result<-ROCR::performance(rates,measure="tpr", x.measure="fpr")
##plot ROC curve and overlay the diagonal line for random guessing
plot(roc_result, main="ROC Curve for Reduced Model")
lines(x = c(0,1), y = c(0,1), col="red")
##compute the AUC
auc<-ROCR::performance(rates, measure = "auc")
auc@y.values
##confusion matrix with threshold of 0.5
table(test$chd, preds>0.5)
##confusion matrix with threshold of 0.5
table(test$sex, preds>0.5)
8/19
120.829070/sqrt((22.6)^2*(1-0.23960510))
.Last.value*sqrt(0.23960510/(1-0.23960510))
2*sqrt(2/19)
120.829070/sqrt((40.46)^2*(1-0.23960510))
((.Last.value)^2/2)*(0.23960510/(1-0.23960510))
##absolute value of studentized residuals, sorted in increasing order
ext.student <- rstudent(result)
ext.student[abs(ext.student)>3]
library(tidyverse)
Data <- read.table("nfl.txt", header=TRUE)
allreg <- leaps::regsubsets(y ~., data=Data, nbest=1)
summary(allreg)
which.max(summary(allreg)$adjr2)
coef(allreg, which.max(summary(allreg)$adjr2))
which.min(summary(allreg)$cp)
coef(allreg, which.min(summary(allreg)$cp))
which.min(summary(allreg)$bic)
coef(allreg, which.min(summary(allreg)$bic))
#Model 4
result<-lm(y~x2+x7+x8+x9, data=Data)
par(mfrow = c(2, 2))
plot(result)
#Model 3
result<-lm(y~x2+x7+x8, data=Data)
par(mfrow = c(2, 2))
plot(result)
##intercept only model
regnull <- lm(y~1, data=Data)
##model with all predictors
regfull <- lm(y~., data=Data)
step(regnull, scope=list(lower=regnull, upper=regfull), direction="forward")
step(regfull, scope=list(lower=regnull, upper=regfull), direction="backward")
press_stat <- function(result) {
r <- resid(result)
pr <- resid(result)/(1 - lm.influence(result)$hat)
sum(pr^2)
}
result<-lm(y~x2+x7+x8+x9, data=Data)
print(press_stat(result))
summary(result)
anova.tab<-anova(result)
SST<-sum(anova.tab$"Sum Sq")
PRESS <- press_stat(result)
R2_pred <- 1 - (PRESS/SST)
R2_pred
result<-lm(y~x2+x7+x8+x9, data=Data)
library(car)
car::avPlots(result)
##absolute value of studentized residuals, sorted in increasing order
ext.student <- rstudent(result)
ext.student[abs(ext.student)>3]
##absolute value of studentized residuals, sorted in increasing order
ext.student <- rstudent(result)
ext.student[abs(ext.student)>2]
##absolute value of studentized residuals, sorted in increasing order
ext.student <- rstudent(result)
ext.student[abs(ext.student)>3]
hii<-lm.influence(result)$hat
n<-nrow(Data)
p<-5
hii[hii>2*p/n]
DFFITS<-dffits(result)
DFFITS[abs(DFFITS)>2*sqrt(p/n)]
sort(abs(DFFITS))
DFBETAS<-dfbetas(result)
abs(DFBETAS)>2/sqrt(n)
COOKS<-cooks.distance(result)
COOKS[COOKS>1]
sort(COOKS)
n
##absolute value of studentized residuals, sorted in increasing order
ext.student <- rstudent(result)
ext.student[abs(ext.student)>3]
sort(abs(ext.student))
2*sqrt(p/n)
DFFITS<-dffits(result)
DFFITS[abs(DFFITS)>2*sqrt(p/n)]
DFFITS<-dffits(result)
DFFITS[abs(DFFITS)>2*sqrt(p/n)]
DFBETAS<-dfbetas(result)
abs(DFBETAS)>2/sqrt(n)
DFBETAS<-dfbetas(result)
abs(DFBETAS)>2/sqrt(n)
DFFITS<-dffits(result)
DFFITS[abs(DFFITS)>2*sqrt(p/n)
DFFITS<-dffits(result)
DFFITS[abs(DFFITS)>2*sqrt(p/n)]
COOKS<-cooks.distance(result)
COOKS[COOKS>1]
sort(COOKS)
library(faraway)
Data<-faraway::wcgs
Data<-Data[, -c(2:3)]
Data<-Data[, -c(4:5)]
Data<-Data[, -c(7:9)]
Data$dibep<-factor(Data$dibep)
Data$chd<-factor(Data$chd)
set.seed(6021) ##for reproducibility to get the same split
sample<-sample.int(nrow(Data), floor(.50*nrow(Data)), replace = F)
train<-Data[sample, ] ##training data frame
test<-Data[-sample, ] ##test data frame
ggplot2::ggplot(train, aes(x=dibep, fill=chd))+
geom_bar(position = "fill")+
labs(x="Behavior Type", y="Proportion", title="Proportion of People with Coronary Heart Dieases by Behavior Type")
View(Data)
View(Data)
library(faraway)
Data<-faraway::wcgs
#Data<-Data[, -c(2:3)]
#Data<-Data[, -c(4:5)]
#Data<-Data[, -c(7:9)]
#Data$dibep<-factor(Data$dibep)
Data$chd<-factor(Data$chd)
set.seed(6021) ##for reproducibility to get the same split
sample<-sample.int(nrow(Data), floor(.50*nrow(Data)), replace = F)
train<-Data[sample, ] ##training data frame
test<-Data[-sample, ] ##test data frame
library(faraway)
Data<-faraway::wcgs
Data<-Data[, -c(2:3)]
Data<-Data[, -c(4:5)]
Data<-Data[, -c(7:9)]
Data$dibep<-factor(Data$dibep)
Data$chd<-factor(Data$chd)
set.seed(6021) ##for reproducibility to get the same split
sample<-sample.int(nrow(Data), floor(.50*nrow(Data)), replace = F)
train<-Data[sample, ] ##training data frame
test<-Data[-sample, ] ##test data frame
##fit logistic regression
result<-glm(chd~., family=binomial, data=train)
result
library(faraway)
Data<-faraway::wcgs
Data<-Data[, -c(2:3)]
Data<-Data[, -c(4:5)]
Data<-Data[, -c(7:9)]
Data$dibep<-factor(Data$dibep)
Data$chd<-factor(Data$chd)
set.seed(6021) ##for reproducibility to get the same split
sample<-sample.int(nrow(Data), floor(.50*nrow(Data)), replace = F)
train<-Data[sample, ] ##training data frame
test<-Data[-sample, ] ##test data frame
ggplot2::ggplot(train, aes(x=dibep, fill=chd))+
geom_bar(position = "fill")+
labs(x="Behavior Type", y="Proportion", title="Proportion of People with Coronary Heart Dieases by Behavior Type")
library(gridExtra)
dp1<-ggplot2::ggplot(train,aes(x=age, color=chd))+
geom_density()+
labs(title="Density Plot of Age by People with Coronary Heart Dieases")
dp2<-ggplot2::ggplot(train,aes(x=sdp, color=chd))+
geom_density()+
labs(title="Density Plot of Systolic Blood Pressue by People with Coronary Heart Dieases")
dp3<-ggplot2::ggplot(train,aes(x=dbp, color=chd))+
geom_density()+
labs(title="Density Plot of Diastolic Blood Pressure by People with Coronary Heart Dieases")
dp4<-ggplot2::ggplot(train,aes(x=cigs, color=chd))+
geom_density()+
labs(title="Density Plot of Cigarttes Smoked by People with Coronary Heart Dieases")
gridExtra::grid.arrange(dp1, dp2, dp3, dp4, ncol = 2, nrow = 2)
##fit logistic regression
result<-glm(chd~., family=binomial, data=train)
result
newdata<-data.frame(age=45, sdp=110, dbp=70, cigs=0, dibep="B")
es_odds <- exp(predict(result,newdata))
es_odds
preds<-predict(result,newdata, type="response")
preds
TS<-result$"null.deviance" - result$"deviance"
TS
##pvalue
1-pchisq(TS,5)
reduced<-glm(chd~age+cigs+dibep, family=binomial, data=train)
##test to compare reduced and full model
##test stat
TS<-reduced$deviance-result$deviance
TS
1-pchisq(TS,2)
summary(result)
reduced<-glm(chd~age+cigs+dibep+dbp, family=binomial, data=train)
reduced
preds<-predict(reduced,newdata=test, type="response")
library(ROCR)
##produce the numbers associated with classification table
rates<-ROCR::prediction(preds, test$chd)
##store the true positive and false postive rates
roc_result<-ROCR::performance(rates,measure="tpr", x.measure="fpr")
##plot ROC curve and overlay the diagonal line for random guessing
plot(roc_result, main="ROC Curve for Reduced Model")
lines(x = c(0,1), y = c(0,1), col="red")
##compute the AUC
auc<-ROCR::performance(rates, measure = "auc")
auc@y.values
##confusion matrix with threshold of 0.5
table(test$chd, preds>0.5)
1449/(1449+128)
##confusion matrix with threshold of 0.5
table(test$chd, preds>0.5)
##confusion matrix with threshold of 0.5
table(test$chd, preds>0.4)
##confusion matrix with threshold of 0.5
table(test$chd, preds>0.35)
##confusion matrix with threshold of 0.5
table(test$chd, preds>0.4)
(1446+1)/(1446+3+127+1)
1/(128)
3/(1446+3)
##confusion matrix with threshold of 0.5
table(test$chd, preds>0.25)
##confusion matrix with threshold of 0.5
table(test$chd, preds>0.4)
##confusion matrix with threshold of 0.5
table(test$chd, preds>0.1)
##confusion matrix with threshold of 0.5
table(test$chd, preds>0.2)
##confusion matrix with threshold of 0.5
table(test$chd, preds>0.4)
##confusion matrix with threshold of 0.5
table(test$chd, preds>0.25)
##confusion matrix with threshold of 0.5
table(test$chd, preds>0.2)
##confusion matrix with threshold of 0.5
table(test$chd, preds>0.1)
##confusion matrix with threshold of 0.5
table(test$chd, preds>0.05)
##confusion matrix with threshold of 0.5
table(test$chd, preds>0.15)
##confusion matrix with threshold of 0.5
table(test$chd, preds>0.10)
##confusion matrix with threshold of 0.5
table(test$chd, preds>0.05)
##confusion matrix with threshold of 0.5
table(test$chd, preds>0.07)
##confusion matrix with threshold of 0.5
table(test$chd, preds>0.08)
##confusion matrix with threshold of 0.5
table(test$chd, preds>0.09)
##confusion matrix with threshold of 0.5
table(test$chd, preds>0.4)
##confusion matrix with threshold of 0.5
table(test$chd, preds>0.6)
##confusion matrix with threshold of 0.5
table(test$chd, preds>0.1)
##confusion matrix with threshold of 0.5
table(test$chd, preds>0.4)
library(tidyverse)
Data <- read.table("nfl.txt", header=TRUE)
allreg <- leaps::regsubsets(y ~., data=Data, nbest=1)
summary(allreg)
which.max(summary(allreg)$adjr2)
coef(allreg, which.max(summary(allreg)$adjr2))
which.min(summary(allreg)$cp)
coef(allreg, which.min(summary(allreg)$cp))
which.min(summary(allreg)$bic)
coef(allreg, which.min(summary(allreg)$bic))
#Model 4
result<-lm(y~x2+x7+x8+x9, data=Data)
par(mfrow = c(2, 2))
plot(result)
#Model 3
result<-lm(y~x2+x7+x8, data=Data)
par(mfrow = c(2, 2))
plot(result)
##intercept only model
regnull <- lm(y~1, data=Data)
##model with all predictors
regfull <- lm(y~., data=Data)
step(regnull, scope=list(lower=regnull, upper=regfull), direction="forward")
step(regfull, scope=list(lower=regnull, upper=regfull), direction="backward")
press_stat <- function(result) {
r <- resid(result)
pr <- resid(result)/(1 - lm.influence(result)$hat)
sum(pr^2)
}
result<-lm(y~x2+x7+x8+x9, data=Data)
print(press_stat(result))
summary(result)
anova.tab<-anova(result)
SST<-sum(anova.tab$"Sum Sq")
PRESS <- press_stat(result)
R2_pred <- 1 - (PRESS/SST)
R2_pred
result<-lm(y~x2+x7+x8+x9, data=Data)
library(car)
car::avPlots(result)
##absolute value of studentized residuals, sorted in increasing order
ext.student <- rstudent(result)
ext.student[abs(ext.student)>3]
hii<-lm.influence(result)$hat
n<-nrow(Data)
p<-5
hii[hii>2*p/n]
DFFITS<-dffits(result)
DFFITS[abs(DFFITS)>2*sqrt(p/n)]
DFBETAS<-dfbetas(result)
abs(DFBETAS)>2/sqrt(n)
COOKS<-cooks.distance(result)
COOKS[COOKS>1]
sort(COOKS)
library(palmerpenguins)
Data<-palmerpenguins::penguins
##remove penguins with gender missing
Data<-Data[complete.cases(Data[ , 7]),-c(2,8)]
##80-20 split
Data$sex<-factor(Data$sex)
Data$species<-factor(Data$species)
set.seed(1)
sample<-sample.int(nrow(Data), floor(.80*nrow(Data)), replace = F)
train<-Data[sample, ]
test<-Data[-sample, ]
dp1<-ggplot2::ggplot(train,aes(x=bill_length_mm, color=sex))+
geom_density()+
labs(title="Density Plot of Bill Length by Penguin Sex")
dp2<-ggplot2::ggplot(train,aes(x=bill_depth_mm, color=sex))+
geom_density()+
labs(title="Density Plot of Bill Depth by Penguin Sex")
dp3<-ggplot2::ggplot(train,aes(x=flipper_length_mm, color=sex))+
geom_density()+
labs(title="Density Plot of Flipper Length by Penguin Sex")
dp4<-ggplot2::ggplot(train,aes(x=body_mass_g, color=sex))+
geom_density()+
labs(title="Density Plot of Body Mass by Penguin Sex")
gridExtra::grid.arrange(dp1, dp2, dp3, dp4, ncol = 2, nrow = 2)
##fit logistic regression
result<-glm(sex~., family=binomial, data=train)
summary(result)
result<-glm(sex~bill_length_mm+bill_depth_mm+body_mass_g+species, family=binomial, data=train)
result
View(Data)
View(Data)
newdata<-data.frame(bill_length_mm=49, bill_depth_mm=15, flipper_length=220, body_mass_g=5700, species="Gentoo")
logodds <- predict(result,newdata)
logodds
odds <- exp(logodds)
odds
preds<-predict(result,newdata, type="response")
preds
odds <- exp(predict(result,newdata))
odds
TS<-result$"null.deviance" - result$"deviance"
##pvalue
TS
1-pchisq(TS,5)
qchisq(1-0.05,5)
preds<-predict(result,newdata=test, type="response")
library(ROCR)
##produce the numbers associated with classification table
rates<-ROCR::prediction(preds, test$sex)
##store the true positive and false postive rates
roc_result<-ROCR::performance(rates,measure="tpr", x.measure="fpr")
##plot ROC curve and overlay the diagonal line for random guessing
plot(roc_result, main="ROC Curve for Reduced Model")
lines(x = c(0,1), y = c(0,1), col="red")
##compute the AUC
auc<-ROCR::performance(rates, measure = "auc")
auc@y.values
##confusion matrix with threshold of 0.5
table(test$sex, preds>0.5)
7/(7+28)
4/(4+28)
7+4/(28+28+7+4)
(7+4)/(28+28+7+4)
