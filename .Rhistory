geom_smooth(method = "lm", se=FALSE)+
labs(x="Year Built", y="Price", title="Scatterplot of Price against Year Built")
#train <- train %>%
#mutate(renovated = =ifelse(yr_renovated=0, "yes", "no"))
data <- train %>%
filter(yr_renovated!=0)
ggplot2::ggplot(train, aes(x=yr_renovated,y=price))+
geom_point()+
geom_smooth(method = "lm", se=FALSE)+
labs(x="Year Built", y="Price", title="Scatterplot of Price against Year Built")
#train <- train %>%
#mutate(renovated = =ifelse(yr_renovated=0, "yes", "no"))
data <- train %>%
filter(yr_renovated!=0)
ggplot2::ggplot(data, aes(x=yr_renovated,y=price))+
geom_point()+
geom_smooth(method = "lm", se=FALSE)+
labs(x="Year Built", y="Price", title="Scatterplot of Price against Year Built")
#train <- train %>%
#mutate(renovated = =ifelse(yr_renovated=0, "yes", "no"))
data <- train %>%
filter(yr_renovated!=0)
ggplot2::ggplot(data, aes(x=yr_renovated,y=price))+
geom_point()+
geom_smooth(method = "lm", se=FALSE)+
labs(x="Year Renovated", y="Price", title="Scatterplot of Price against Year Renovated")
#train <- train %>%
#mutate(renovated = =ifelse(yr_renovated=0, "yes", "no"))
data <- train %>%
filter(yr_renovated!=0)
ggplot2::ggplot(data, aes(x=yr_renovated,y=price))+
geom_point()+
geom_smooth(method = "lm", se=FALSE)+
labs(x="Year Renovated", y="Price", title="Scatterplot of Price against Year Renovated")
train <- train %>%
mutate(renovated = =ifelse(yr_renovated=0, "no", "yes"))
#data <- train %>%
#filter(yr_renovated!=0)
#ggplot2::ggplot(data, aes(x=yr_renovated,y=price))+
#geom_point()+
#geom_smooth(method = "lm", se=FALSE)+
#labs(x="Year Renovated", y="Price", title="Scatterplot of Price against Year Renovated")
train <- train %>%
mutate(renovated = =ifelse(yr_renovated=0, "no", "yes"))
#data <- train %>%
#filter(yr_renovated!=0)
#ggplot2::ggplot(data, aes(x=yr_renovated,y=price))+
#geom_point()+
#geom_smooth(method = "lm", se=FALSE)+
#labs(x="Year Renovated", y="Price", title="Scatterplot of Price against Year Renovated")
train <- train %>%
mutate(renovated =ifelse(yr_renovated=0, "no", "yes"))
#data <- train %>%
#filter(yr_renovated!=0)
#ggplot2::ggplot(data, aes(x=yr_renovated,y=price))+
#geom_point()+
#geom_smooth(method = "lm", se=FALSE)+
#labs(x="Year Renovated", y="Price", title="Scatterplot of Price against Year Renovated")
train <- train %>%
mutate(renovated =ifelse(yr_renovated==0, "no", "yes"))
##make discrete categories
train$bedrooms = factor(train$bedrooms)
train$bathrooms = factor(train$bathrooms)
train$floors = factor(train$floors)
train$waterfront = factor(train$waterfront)
train$view = factor(train$view)
train$condition = factor(train$condition)
train$renovated = factor(train$renovated)
train$city = factor(train$city)
ggplot2::ggplot(train, aes(x=bedrooms,y=price))+
geom_point()+
geom_smooth(method = "lm", se=FALSE)+
labs(x="Bedrooms", y="Price", title="Scatterplot of Price against Bedrooms")
ggplot2::ggplot(train, aes(x=bathrooms,y=price))+
geom_point()+
geom_smooth(method = "lm", se=FALSE)+
labs(x="Bathrooms", y="Price", title="Scatterplot of Price against Bathrooms")
ggplot2::ggplot(train, aes(x=floors,y=price))+
geom_point()+
geom_smooth(method = "lm", se=FALSE)+
labs(x="Floors", y="Price", title="Scatterplot of Price against floors")
train <- train %>%
mutate(good_condition =ifelse(condition>=3, "yes", "no"))
train <- train %>%
mutate(good_condition =ifelse(condition=>3, "yes", "no"))
train <- train %>%
mutate(good_condition =ifelse(condition>2, "yes", "no"))
library(ggplot2)
library(faraway)
library(zipcodeR)
library(tidyverse)
Data <- read.csv("kc_house_data.csv")
Data <- Data<-Data[, -c(1:2)]
set.seed(6021)
sample.data <- sample.int(nrow(Data), floor(0.50*nrow(Data)), replace=F)
train <- Data[sample.data,]
test <- Data[-sample.data,]
options(scipen=999)
dp4 <- ggplot2::ggplot(train, aes(x=yr_built,y=price))+
geom_point()+
geom_smooth(method = "lm", se=FALSE)+
labs(x="Year Built", y="Price", title="Scatterplot of Price against Year Built")
dp4
quant <- train[, -c(2:3)]
quant <- quant[, -c(4:8)]
quant <- quant[, -c(7:8)]
quant <- quant[, -c(7:8)]
round(cor(quant[,-1]),3)
all<-lm(price~., data=quant)
faraway::vif(all)
train <- train %>%
mutate(good_condition =ifelse(condition>2, "yes", "no"))
library(ggplot2)
library(faraway)
library(zipcodeR)
library(tidyverse)
Data <- read.csv("kc_house_data.csv")
Data <- Data<-Data[, -c(1:2)]
set.seed(6021)
sample.data <- sample.int(nrow(Data), floor(0.50*nrow(Data)), replace=F)
train <- Data[sample.data,]
test <- Data[-sample.data,]
options(scipen=999)
dp4 <- ggplot2::ggplot(train, aes(x=yr_built,y=price))+
geom_point()+
geom_smooth(method = "lm", se=FALSE)+
labs(x="Year Built", y="Price", title="Scatterplot of Price against Year Built")
dp4
View(train)
View(train)
quant <- train[, -c(2)]
quant <- quant[, -c(4:8)]
quant <- quant[, -c(7:8)]
quant <- quant[, -c(7:8)]
round(cor(quant[,-1]),3)
quant <- train[, -c(2)]
quant <- quant[, -c(4:8)]
quant <- quant[, -c(7:8)]
quant <- quant[, -c(7:8)]
round(cor(quant[,-1]),3)
quant <- train[, -c(2)]
quant <- quant[, -c(4:8)]
quant <- quant[, -c(7:8)]
quant <- quant[, -c(7:8)]
round(cor(quant[,-1]),3)
View(quant)
View(quant)
quant <- train[, -c(2:3)]
quant <- quant[, -c(4:8)]
quant <- quant[, -c(7:8)]
quant <- quant[, -c(7:8)]
round(cor(quant[,-1]),3)
View(train)
View(train)
source("~/.active-rstudio-document", echo=TRUE)
quant <- train[, -c(6:10)]
#quant <- quant[, -c(4:8)]
#quant <- quant[, -c(7:8)]
#quant <- quant[, -c(7:8)]
#round(cor(quant[,-1]),3)
View(quant)
View(quant)
quant <- train[, -c(6:10)]
quant <- quant[, -c(9:12)]
#quant <- quant[, -c(7:8)]
#quant <- quant[, -c(7:8)]
#round(cor(quant[,-1]),3)
quant <- train[, -c(6:10)]
quant <- quant[, -c(9:12)]
#quant <- quant[, -c(7:8)]
#quant <- quant[, -c(7:8)]
round(cor(quant[,-1]),3)
ggplot2::ggplot(train, aes(x=bedrooms,y=price))+
geom_point()+
geom_smooth(method = "lm", se=FALSE)+
labs(x="Bedrooms", y="Price", title="Scatterplot of Price against Bedrooms")
ggplot2::ggplot(train, aes(x=bathrooms,y=price))+
geom_point()+
geom_smooth(method = "lm", se=FALSE)+
labs(x="Bathrooms", y="Price", title="Scatterplot of Price against Bathrooms")
ggplot2::ggplot(train, aes(x=floors,y=price))+
geom_point()+
geom_smooth(method = "lm", se=FALSE)+
labs(x="Floors", y="Price", title="Scatterplot of Price against Floors")
##make discrete categories
train$bedrooms_cat = factor(train$bedrooms)
train$bathrooms = factor(train$bathrooms)
train$floors = factor(train$floors)
train$waterfront = factor(train$waterfront)
train$view = factor(train$view)
train$condition = factor(train$condition)
train$renovated = factor(train$renovated)
library(ggplot2)
library(faraway)
library(zipcodeR)
library(tidyverse)
Data <- read.csv("kc_house_data.csv")
Data <- Data<-Data[, -c(1:2)]
set.seed(6021)
sample.data <- sample.int(nrow(Data), floor(0.50*nrow(Data)), replace=F)
train <- Data[sample.data,]
test <- Data[-sample.data,]
options(scipen=999)
dp4 <- ggplot2::ggplot(train, aes(x=yr_built,y=price))+
geom_point()+
geom_smooth(method = "lm", se=FALSE)+
labs(x="Year Built", y="Price", title="Scatterplot of Price against Year Built")
dp4
quant <- train[, -c(6:10)]
quant <- quant[, -c(9:12)]
#quant <- quant[, -c(7:8)]
#quant <- quant[, -c(7:8)]
round(cor(quant[,-1]),3)
all<-lm(price~., data=quant)
faraway::vif(all)
##make discrete categories
train$bedrooms_cat = factor(train$bedrooms)
train$bathrooms = factor(train$bathrooms)
train$floors = factor(train$floors)
train$waterfront = factor(train$waterfront)
train$view = factor(train$view)
train$condition = factor(train$condition)
train$renovated = factor(train$renovated)
library(ggplot2)
library(faraway)
library(zipcodeR)
library(tidyverse)
Data <- read.csv("kc_house_data.csv")
Data <- Data<-Data[, -c(1:2)]
set.seed(6021)
sample.data <- sample.int(nrow(Data), floor(0.50*nrow(Data)), replace=F)
train <- Data[sample.data,]
test <- Data[-sample.data,]
options(scipen=999)
dp4 <- ggplot2::ggplot(train, aes(x=yr_built,y=price))+
geom_point()+
geom_smooth(method = "lm", se=FALSE)+
labs(x="Year Built", y="Price", title="Scatterplot of Price against Year Built")
dp4
quant <- train[, -c(6:10)]
quant <- quant[, -c(9:12)]
#quant <- quant[, -c(7:8)]
#quant <- quant[, -c(7:8)]
round(cor(quant[,-1]),3)
all<-lm(price~., data=quant)
faraway::vif(all)
#data <- train %>%
#filter(yr_renovated!=0)
#ggplot2::ggplot(data, aes(x=yr_renovated,y=price))+
#geom_point()+
#geom_smooth(method = "lm", se=FALSE)+
#labs(x="Year Renovated", y="Price", title="Scatterplot of Price against Year Renovated")
train <- train %>%
mutate(renovated =ifelse(yr_renovated==0, "no", "yes"))
for(i in 1:length(train$zipcode)){
train$city[i] <- reverse_zipcode(train$zipcode[i])$major_city
}
train$city <- unlist(train$city)
##make discrete categories
train$bedrooms_cat = factor(train$bedrooms)
train$bathrooms = factor(train$bathrooms)
train$floors = factor(train$floors)
train$waterfront = factor(train$waterfront)
train$view = factor(train$view)
train$condition = factor(train$condition)
train$renovated = factor(train$renovated)
train$city = factor(train$city)
?reverse_zipcode
##make discrete categories
train$bedrooms_cat = factor(train$bedrooms)
train$bathrooms = factor(train$bathrooms)
train$floors = factor(train$floors)
train$waterfront = factor(train$waterfront)
train$view = factor(train$view)
train$good_condition = factor(train$good_condition)
train <- train %>%
mutate(good_condition =ifelse(condition>2, "yes", "no"))
library(ggplot2)
library(faraway)
library(zipcodeR)
library(tidyverse)
Data <- read.csv("kc_house_data.csv")
Data <- Data<-Data[, -c(1:2)]
set.seed(6021)
sample.data <- sample.int(nrow(Data), floor(0.50*nrow(Data)), replace=F)
train <- Data[sample.data,]
test <- Data[-sample.data,]
options(scipen=999)
dp4 <- ggplot2::ggplot(train, aes(x=yr_built,y=price))+
geom_point()+
geom_smooth(method = "lm", se=FALSE)+
labs(x="Year Built", y="Price", title="Scatterplot of Price against Year Built")
dp4
quant <- train[, -c(6:10)]
quant <- quant[, -c(9:12)]
#quant <- quant[, -c(7:8)]
#quant <- quant[, -c(7:8)]
round(cor(quant[,-1]),3)
all<-lm(price~., data=quant)
faraway::vif(all)
train <- train %>%
mutate(good_condition =ifelse(condition>2, "yes", "no"))
library(ggplot2)
library(faraway)
library(zipcodeR)
library(tidyverse)
Data <- read.csv("kc_house_data.csv")
Data <- Data<-Data[, -c(1:2)]
set.seed(6021)
sample.data <- sample.int(nrow(Data), floor(0.50*nrow(Data)), replace=F)
train <- Data[sample.data,]
test <- Data[-sample.data,]
options(scipen=999)
dp4 <- ggplot2::ggplot(train, aes(x=yr_built,y=price))+
geom_point()+
geom_smooth(method = "lm", se=FALSE)+
labs(x="Year Built", y="Price", title="Scatterplot of Price against Year Built")
dp4
quant <- train[, -c(6:10)]
quant <- quant[, -c(9:12)]
#quant <- quant[, -c(7:8)]
#quant <- quant[, -c(7:8)]
round(cor(quant[,-1]),3)
all<-lm(price~., data=quant)
faraway::vif(all)
##make discrete categories
train$bedrooms_cat = factor(train$bedrooms)
train$bathrooms = factor(train$bathrooms)
train$floors = factor(train$floors)
train$waterfront = factor(train$waterfront)
train$view = factor(train$view)
train$good_condition = factor(train$good_condition)
library(ggplot2)
library(faraway)
library(zipcodeR)
library(tidyverse)
Data <- read.csv("kc_house_data.csv")
Data <- Data<-Data[, -c(1:2)]
set.seed(6021)
sample.data <- sample.int(nrow(Data), floor(0.50*nrow(Data)), replace=F)
train <- Data[sample.data,]
test <- Data[-sample.data,]
options(scipen=999)
dp4 <- ggplot2::ggplot(train, aes(x=yr_built,y=price))+
geom_point()+
geom_smooth(method = "lm", se=FALSE)+
labs(x="Year Built", y="Price", title="Scatterplot of Price against Year Built")
dp4
quant <- train[, -c(6:10)]
quant <- quant[, -c(9:12)]
#quant <- quant[, -c(7:8)]
#quant <- quant[, -c(7:8)]
round(cor(quant[,-1]),3)
all<-lm(price~., data=quant)
#faraway::vif(all)
ggplot2::ggplot(train, aes(x=bedrooms,y=price))+
geom_point()+
geom_smooth(method = "lm", se=FALSE)+
labs(x="Bedrooms", y="Price", title="Scatterplot of Price against Bedrooms")
ggplot2::ggplot(train, aes(x=bathrooms,y=price))+
geom_point()+
geom_smooth(method = "lm", se=FALSE)+
labs(x="Bathrooms", y="Price", title="Scatterplot of Price against Bathrooms")
ggplot2::ggplot(train, aes(x=floors,y=price))+
geom_point()+
geom_smooth(method = "lm", se=FALSE)+
labs(x="Floors", y="Price", title="Scatterplot of Price against Floors")
train <- train %>%
mutate(good_condition =ifelse(condition>2, "yes", "no"))
#data <- train %>%
#filter(yr_renovated!=0)
#ggplot2::ggplot(data, aes(x=yr_renovated,y=price))+
#geom_point()+
#geom_smooth(method = "lm", se=FALSE)+
#labs(x="Year Renovated", y="Price", title="Scatterplot of Price against Year Renovated")
train <- train %>%
mutate(renovated =ifelse(yr_renovated==0, "no", "yes"))
for(i in 1:length(train$zipcode)){
train$city[i] <- reverse_zipcode(train$zipcode[i])$major_city
}
train$city <- unlist(train$city)
write.csv(train, "/Users/rosee.m./Desktop/bookmarks/linear_models_ds/lm_project2/city.csv", row.names=TRUE)
library(ggplot2)
library(faraway)
library(zipcodeR)
library(tidyverse)
Data <- read.csv("kc_house_data.csv")
Data <- Data<-Data[, -c(1:2)]
View(Data)
View(Data)
View(Data)
View(Data)
reverse_zipcode(98125)#$major_city
reverse_zipcode(98125)#$major_city
reverse_zipcode(98028)
reverse_zipcode(98136)
reverse_zipcode(98074)
library(ggplot2)
library(faraway)
library(zipcodeR)
library(tidyverse)
Data <- read.csv("kc_house_data.csv")
Data <- Data<-Data[, -c(1:2)]
set.seed(6021)
sample.data <- sample.int(nrow(Data), floor(0.50*nrow(Data)), replace=F)
train <- Data[sample.data,]
test <- Data[-sample.data,]
options(scipen=999)
dp4 <- ggplot2::ggplot(train, aes(x=yr_built,y=price))+
geom_point()+
geom_smooth(method = "lm", se=FALSE)+
labs(x="Year Built", y="Price", title="Scatterplot of Price against Year Built")
dp4
quant <- train[, -c(6:10)]
quant <- quant[, -c(9:12)]
#quant <- quant[, -c(7:8)]
#quant <- quant[, -c(7:8)]
round(cor(quant[,-1]),3)
all<-lm(price~., data=quant)
#faraway::vif(all)
ggplot2::ggplot(train, aes(x=view(),y=price))+
geom_point()+
geom_smooth(method = "lm", se=FALSE)+
labs(x="View", y="Price", title="Scatterplot of Price against View")
ggplot2::ggplot(train, aes(x=view(),y=price))+
geom_point()+
geom_smooth(method = "lm", se=FALSE)+
labs(x="View", y="Price", title="Scatterplot of Price against View")
library(ggplot2)
library(faraway)
library(zipcodeR)
library(tidyverse)
Data <- read.csv("kc_house_data.csv")
Data <- Data<-Data[, -c(1:2)]
set.seed(6021)
sample.data <- sample.int(nrow(Data), floor(0.50*nrow(Data)), replace=F)
train <- Data[sample.data,]
test <- Data[-sample.data,]
options(scipen=999)
dp4 <- ggplot2::ggplot(train, aes(x=yr_built,y=price))+
geom_point()+
geom_smooth(method = "lm", se=FALSE)+
labs(x="Year Built", y="Price", title="Scatterplot of Price against Year Built")
dp4
quant <- train[, -c(6:10)]
quant <- quant[, -c(9:12)]
#quant <- quant[, -c(7:8)]
#quant <- quant[, -c(7:8)]
round(cor(quant[,-1]),3)
all<-lm(price~., data=quant)
#faraway::vif(all)
ggplot2::ggplot(train, aes(x=view(),y=price))+
geom_point()+
geom_smooth(method = "lm", se=FALSE)+
labs(x="View", y="Price", title="Scatterplot of Price against View")
ggplot2::ggplot(train, aes(x=view,y=price))+
geom_point()+
geom_smooth(method = "lm", se=FALSE)+
labs(x="View", y="Price", title="Scatterplot of Price against View")
library(ggplot2)
library(faraway)
library(zipcodeR)
library(tidyverse)
Data <- read.csv("kc_house_data.csv")
Data <- Data<-Data[, -c(1:2)]
Data <- Data %>%
mutate(high_bed =ifelse(bedrooms>4, "yes", "no"))
Data <- Data %>%
mutate(high_bathrms =ifelse(bathrooms>4, "yes", "no"))
Data <- Data %>%
mutate(high_floor =ifelse(floors>2, "yes", "no"))
Data <- Data %>%
mutate(good_view =ifelse(view>2, "yes", "no"))
Data <- Data %>%
mutate(good_condition =ifelse(condition>2, "yes", "no"))
Data <- Data %>%
mutate(renovated =ifelse(yr_renovated==0, "no", "yes"))
for(i in 1:length(Data$zipcode)){
Data$city[i] <- reverse_zipcode(Data$zipcode[i])$major_city
}
Data$city <- unlist(Data$city)
library(ggplot2)
library(faraway)
library(zipcodeR)
library(tidyverse)
Data <- read.csv("kc_house_data.csv")
Data <- Data<-Data[, -c(1:2)]
set.seed(6021)
sample.data <- sample.int(nrow(Data), floor(0.50*nrow(Data)), replace=F)
train <- Data[sample.data,]
test <- Data[-sample.data,]
options(scipen=999)
dp4 <- ggplot2::ggplot(train, aes(x=yr_built,y=price))+
geom_point()+
geom_smooth(method = "lm", se=FALSE)+
labs(x="Year Built", y="Price", title="Scatterplot of Price against Year Built")
dp4
quant <- train[, -c(6:10)]
quant <- quant[, -c(9:12)]
#quant <- quant[, -c(7:8)]
#quant <- quant[, -c(7:8)]
round(cor(quant[,-1]),3)
all<-lm(price~., data=quant)
#faraway::vif(all)
ggplot2::ggplot(train, aes(x=grade,y=price))+
geom_point()+
geom_smooth(method = "lm", se=FALSE)+
labs(x="View", y="Price", title="Scatterplot of Price against View")
ggplot2::ggplot(train, aes(x=grade,y=price))+
geom_point()+
geom_smooth(method = "lm", se=FALSE)+
labs(x="Grade", y="Price", title="Scatterplot of Price against Grade")
